{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","document","getElementById","innerHTML","App","webcamRef","useRef","canvasRef","useState","winWidth","winHeight","runCoco","a","cocossd","net","console","log","setInterval","detect","maxNumBoxes","current","video","readyState","videoWidth","videoHeight","obj","getContext","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","paddingTop","id","fontSize","ReactDOM","render","StrictMode"],"mappings":"0cAAaA,G,OAAW,SAACC,EAAYC,GAEnCD,EAAWE,SAAQ,SAAAC,GAAc,kBAGDA,EAAU,KAHT,GAGxBC,EAHwB,KAGrBC,EAHqB,KAGlBC,EAHkB,KAGXC,EAHW,KAIzBC,EAAOL,EAAU,MAGjBM,EAAQC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAC1DZ,EAAIa,YAAc,IAAML,EACxBR,EAAIc,KAAO,aAGXd,EAAIe,YACJf,EAAIgB,UAAY,IAAMR,EACtBR,EAAIiB,SAASV,EAAMJ,EAAGC,GACtBJ,EAAIkB,KAAKf,EAAGC,EAAGC,EAAOC,GACtBN,EAAImB,YAIJC,SAASC,eAAe,cAAcC,UAAY,uBCyFvCC,MAvGf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAFZ,EAImBE,mBAAS,KAJ5B,mBAINC,EAJM,aAKqBD,mBAAS,MAL9B,mBAKNE,EALM,KAQPC,GARO,KAQA,uCAAG,4BAAAC,EAAA,sEACIC,MADJ,OACRC,EADQ,OAEdC,QAAQC,IAAI,wBAEZC,aAAY,WACVC,EAAOJ,EAAI,CAACK,YAAa,MACxB,IANW,2CAAH,sDASPD,EAAM,uCAAG,WAAOJ,GAAP,uBAAAF,EAAA,yDAGkB,qBAAtBP,EAAUe,SACK,OAAtBf,EAAUe,SAC6B,IAAvCf,EAAUe,QAAQC,MAAMC,WALb,wBAQLD,EAAQhB,EAAUe,QAAQC,MAC1BE,EAAalB,EAAUe,QAAQC,MAAME,WACrCC,EAAcnB,EAAUe,QAAQC,MAAMG,YAG5CnB,EAAUe,QAAQC,MAAMnC,MAAQqC,EAChClB,EAAUe,QAAQC,MAAMlC,OAASqC,EAGjCjB,EAAUa,QAAQlC,MAAQqC,EAC1BhB,EAAUa,QAAQjC,OAASqC,EAlBhB,UAqBOV,EAAII,OAAOG,GArBlB,QAqBLI,EArBK,OAwBL5C,EAAM0B,EAAUa,QAAQM,WAAW,MACzC/C,EAAS8C,EAAK5C,GAzBH,4CAAH,sDA+BZ,OAFA8C,qBAAU,WAAKhB,MAAW,IAGxB,yBAAKiB,UAAU,OAEX,kBAAC,IAAD,CACEC,IAAKxB,EACLyB,OAAO,EACPC,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRpD,MAAOuB,EACPtB,OAAQuB,KAIZ,4BACEmB,IAAKtB,EACLwB,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRpD,MAAOuB,EACPtB,OAAQuB,KAGd,yBACEqB,MAAO,CACLQ,WAAY,MAGd,wBACER,MAAO,CACL1C,MAAO,UAFX,mCAKA,uBAAGmD,GAAG,aACJT,MAAO,CACL1C,MAAO,QACPoD,SAAU,KAHd,iBC9FRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3C,SAASC,eAAe,W","file":"static/js/main.b1b36b3e.chunk.js","sourcesContent":["export const drawRect = (detections, ctx) =>{\n  \n  detections.forEach(prediction => {\n\n    // Extract boxes and classes\n    const [x, y, width, height] = prediction['bbox']; \n    const text = prediction['class']; \n\n    // Set styling\n    const color = Math.floor(Math.random()*16777215).toString(16);\n    ctx.strokeStyle = '#' + color\n    ctx.font = '18px Arial';\n\n    // Draw rectangles and text\n    ctx.beginPath();   \n    ctx.fillStyle = '#' + color\n    ctx.fillText(text, x, y);\n    ctx.rect(x, y, width, height); \n    ctx.stroke();\n\n  });\n\n    document.getElementById('personText').innerHTML = '... App Running...'\n}\n","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const [winWidth, setwinWidth] = useState(640)\n  const [winHeight, setwinHeight] = useState(480)\n\n  // Main function\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Object model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net,{maxNumBoxes: 1});\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx); \n    }\n  };\n\n  useEffect(()=>{runCoco()},[]);\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n        <Webcam\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: winWidth,\n            height: winHeight,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: winWidth,\n            height: winHeight,\n          }}\n        />\n      <div \n        style={{\n          paddingTop: 500\n        }}\n      >\n        <h1\n          style={{\n            color: \"white\"\n          }}\n        >Realtime Multi Object Detection</h1>\n        <p id='personText'\n          style={{\n            color: \"white\",\n            fontSize: 20\n          }}\n        >Loading...</p>\n      </div>\n      {/* </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}